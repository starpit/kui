@import "ansi_up";

* {
  box-sizing: border-box;
}
::selection {
  background-color: var(--color-selection-background);
}
html,
body[kui-theme-style],
.page,
.main,
.kui--full-height,
.repl {
  height: 100%;
  flex: 1;
  max-height: 100%;
  overflow-x: hidden;
}
body[kui-theme-style] {
  font-size: 1em;
  font-weight: 400;
  margin: 0;
  overflow: hidden;

  /* see https://github.com/IBM/kui/issues/4414 */
  -webkit-font-smoothing: unset;
}
.kui--full-height,
.page {
  display: flex;
  flex-direction: column;
  user-select: text;
}
body[kui-theme-style] a.plain-anchor {
  color: inherit;
  text-decoration: none;
  transition: none;
}
body[kui-theme-style] a {
  transition-property: color;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* HEADER */
body.still-loading .left-tab-stripe {
  display: none;
}
body[kui-theme-style] .page > .header {
  /* only allow mouse dragging on top-most header */
  -webkit-app-region: drag;
}
.header {
  flex-basis: 0;
  display: flex;
  align-items: center;
  padding: 0 1.1875em;
  font-weight: 300;
  font-size: 1rem;
}
.header .deemphasize {
  font-size: 55%;
  letter-spacing: 1px;
  display: none;
}
.header-left-bits,
.header-right-bits {
  display: flex;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.header-left-bits {
  flex: 1;
}
.header .clickable,
.header .clickable:hover {
  text-decoration: none;
  transition: none;
}
.header .clickable {
  /* this just gives a little room for hovers, so that users don't have
   to mouse precisely over the hover text */
  padding: 0.75ex 0;
}
.application-icon {
  /* hide the application by default; custom clients can override this */
  display: none;
}
.header .application-name {
  font-size: 1.125rem;
  font-weight: 400;
}
.header .application-name .bx--logo__text--bold {
  font-weight: 600;
}
.header .application-name .bx--global-header__title--current-page {
  font-weight: 400;
}
header .header-nav-list {
  display: flex;
  align-items: center;
  list-style: none;
  margin: 0;
  padding: 0;
}
.header .header-nav-list li {
  font-weight: 400;
  font-size: 0.75rem;
  text-transform: uppercase;
  margin: 0 1em;
  -webkit-app-region: no-drag;
}
.header-nav-list li input {
  border: none;
  font-family: inherit;
  font-size: inherit;
  text-transform: inherit;
  font-weight: inherit;
  padding: 0;
}

/* MAIN */
.main {
  display: flex;
  flex: 1;
}

/* REPL */
#invisible-global-input {
  /* element that handles text input while a command is being executed */
  position: absolute;
  left: -1000px;
  top: -1000px;
}
body.still-loading .repl {
  opacity: 0;
}
.scrollable[data-table-max-rows="4"],
.scrollable-auto[data-table-max-rows="4"] {
  max-height: calc(4 * 3em + 2px);
}
.scrollable[data-table-max-rows="5"],
.scrollable-auto[data-table-max-rows="5"] {
  max-height: calc(5 * 3em + 2px);
}
.scrollable[data-table-max-rows="6"],
.scrollable-auto[data-table-max-rows="6"] {
  max-height: calc(6 * 3em + 2px);
}
.scrollable[data-table-max-rows="7"],
.scrollable-auto[data-table-max-rows="7"] {
  max-height: calc(7 * 3em + 2px);
}
.scrollable[data-table-max-rows="8"],
.scrollable-auto[data-table-max-rows="8"] {
  max-height: calc(8 * 3em + 2px);
}
.scrollable[data-table-max-rows="9"],
.scrollable-auto[data-table-max-rows="9"] {
  max-height: calc(9 * 3em + 2px);
}
.scrollable[data-table-max-rows="10"],
.scrollable-auto[data-table-max-rows="10"] {
  max-height: calc(10 * 3em + 2px);
}
.green-text,
.dragover .ok-text-on-dragover {
  opacity: 1 !important;
}
.fifty-fifty:nth-last-child(2) {
  max-width: calc(50% - 3em);
  margin-right: 3em;
}
.fifty-fifty:last-child {
  max-width: 50%;
}
.repl.sidecar-visible .repl-block .fifty-fifty {
  max-width: unset;
  margin-right: unset;
}
.entity-rule-status {
  width: 7em;
}
.sidecar-visible .repl-result.one-column .package-prefix {
  max-width: 35%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.timestamp-same-day {
  /* keep the width, but make it hidden */
  opacity: 0;
}

/* custom content */
.code-highlighting pre {
  font-family: var(--font-monospace);
  font-weight: 400;
  font-size: 0.875em;
  white-space: pre-wrap;
  background: transparent;
}

/* generic */
.kui--hero-text {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1em;
  font-size: 2em;
  font-family: var(--font-sans-serif);
}
.flex-fill {
  flex: 1;
}
.kui--rotate-180 {
  transform: rotate(180deg);
}
.kui--rotate-180-then-flip {
  transform: scaleY(-1);
}
.full-height {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow-y: hidden;
}
.kui--relative-positioning {
  position: relative;
}
.kui--center-absolute {
  /* assumes parent is position: relative */
  position: absolute;
  top: 15%;
  left: 50%;
  transform: translateX(-50%);
}
textarea.not-tabbable,
input.not-tabbable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.map-key {
  color: var(--color-map-key);
}
.map-value {
  color: var(--color-map-value);
}
b {
  font-weight: bold;
}
webview {
  display: flex;
  flex: 1;
  background: transparent;
}
.blurry {
  filter: blur(3px) brightness(0.5) grayscale(0.5);
  -webkit-app-region: drag;
}
.blurry [data-balloon]:before,
.blurry [data-balloon]:after {
  /* no tooltips under a blurry element */
  display: none;
}
.present-as-quotation {
  padding: 0.375em 0;
  margin: 0.375em 0;
}
.do-not-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-auto {
  overflow: auto;
}
.display-inline {
  display: inline;
}
.fixed-table-layout {
  table-layout: fixed;
}
.text-center {
  text-align: center;
}
.text-right,
td.text-right,
th.text-right,
th.text-right > span {
  text-align: right !important;
}
pre,
code {
  font-family: var(--font-monospace);
}
code.fancy-code,
code.fancy-code.hljs {
  background: var(--color-base00) !important;
  border: 1px solid var(--color-ui-04);
  color: var(--color-base05);
}
.no-wrap {
  white-space: nowrap;
}
.normal-wrap {
  white-space: normal;
}
.break-all {
  word-break: break-all;
}
.hide {
  display: none !important;
}
.flex-layout {
  display: flex;
  align-items: center;
}
.as-column {
  display: grid;
}
.flex-layout.flex-align-stretch {
  align-items: stretch;
}
.flex-align-center {
  justify-content: center;
}
.flex-align-end {
  display: flex;
  justify-content: flex-end;
}
.flex-align-top {
  align-items: flex-start;
}
.grid-layout {
  display: grid;
  grid-column-gap: 0.875em;
  grid-template-columns: repeat(auto-fill, minmax(10em, auto));
  grid-template-rows: repeat(auto-fill, minmax(1.25em, auto));
  flex: 1;
}
.grid-layout > div {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.normal-text {
  color: var(--color-text-01);
  font-weight: 400;
  opacity: 1;
  font-size: 1em;
}
.normal-text svg path {
  fill: var(--color-text-01);
}
.even-larger-text {
  font-size: 2em;
  line-height: 1em;
}
.larger-text {
  font-size: 1.5em;
}
.even-smaller-text {
  font-size: 0.75em;
}
.smaller-text {
  font-size: 0.875em;
}
.somewhat-smaller-text {
  font-size: 0.925em;
}
[kui-theme-style] .sub-text {
  color: var(--color-text-02);
}
.lighter-text {
  font-weight: 300;
}
.even-lighter-text {
  color: var(--color-text-02);
  font-weight: 300;
}
.nowrap {
  white-space: nowrap;
}
.slightly-deemphasize {
  color: var(--color-text-02);
}
.deemphasize {
  color: var(--color-text-02);
  font-size: 0.75em;
  opacity: 0.7;
  vertical-align: middle;
}
.deemphasize.deemphasize-partial {
  font-weight: 400;
  opacity: 1;
}
.pre-wrap {
  white-space: pre-wrap;
}
.monospace,
pre.monospace {
  font-family: var(--font-monospace);
}
.sans-serif {
  font-family: var(--font-sans-serif);
}
.semi-bold {
  font-weight: 500;
}
.sans-serif.semi-bold {
  font-weight: 600;
}
.min-width-6em {
  min-width: 6em !important;
}
.min-width-8em {
  min-width: 8em !important;
  display: block;
}
.min-width-10em {
  min-width: 10em !important;
  display: block;
}
.timestamp-like {
  width: 16em;
}
.not-very-wide {
  display: block; /* spans don't respond */
  max-width: 18em;
}
.not-too-wide {
  display: block; /* spans don't respond */
  max-width: 35em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.badge-width {
  width: 10em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.option-width {
  /* e.g. cells in tables that are presenting --options */
  width: 10em;
}
.pretty-narrow {
  /* please note: used in tandem with not-too-wide */
  width: 7em;
}
.very-narrow {
  /* please note: used in tandem with not-too-wide */
  width: 6em !important;
}
.a-few-numbers-wide {
  width: 5em;
}
.icon-width {
  /* intended for fontawesome table cells */
  width: 2em;
}
.double-icon-width {
  /* intended for fontawesome table cells */
  width: 4em;
}
.normal-size {
  color: var(--color-text-01);
  font-size: inherit;
  font-weight: inherit;
}
[kui-theme-style] {
  .small-bottom-pad {
    margin-bottom: 1ex;
    display: inline-flex;
  }
  .bottom-pad {
    margin-bottom: 0.5em;
  }
  .tiny-top-pad {
    margin-top: 0.125em;
  }
  .small-top-pad {
    margin-top: 1ex;
  }
  .big-top-pad {
    margin-top: 2em;
  }
  .top-pad {
    margin-top: 1em;
  }
  .small-left-pad {
    margin-left: 1ex;
  }
  .left-pad {
    margin-left: 1em;
  }
  .tiny-right-pad {
    margin-right: 0.1875em;
  }
  .small-right-pad {
    margin-right: 0.375em;
  }
  .right-pad {
    margin-right: 1em;
  }
}
.repl:not(.sidecar-visible) .result-as-multi-table-flex-wrap .big-top-pad:not(:last-child) > div,
body.subwindow .result-as-multi-table-flex-wrap .big-top-pad:not(:last-child) > div {
  padding-right: 2em;
}
.emphasize {
  font-size: 1.5rem;
  font-weight: 900;
}
.count-with-label[data-is-plural="false"] .label-plural,
.count-with-label[data-is-plural="true"] .label-singular {
  display: none;
}
.clickable-color {
  color: var(--color-base09);
}
.clickable-blatant {
  text-decoration: underline;
  text-decoration-color: var(--color-text-02);
}
.clickable:hover,
.entity-name-group:not(.header-cell) .entity.actions:hover .entity-name {
  cursor: pointer;
  text-decoration: underline;
}
.clickable-block {
  cursor: pointer;
}
.clickable-block:hover {
  border-color: var(--color-ui-05) !important;
}
.graphical-clickable:hover {
  cursor: pointer;
}
.template {
  display: none;
}
.toggle-visibility-on-hover .visible-on-hover {
  transition-property: opacity;
  font-size: 70%;
  font-weight: 900;
  opacity: 0;
}
.toggle-visibility-on-hover:hover .visible-on-hover {
  opacity: 0.5;
}
.hideable {
  transition-property: all;
}
.hidden {
  opacity: 0;
  height: 0;
  flex: 0 0 0;
  padding: 0 !important;
  margin: 0 !important;
  border: none !important;
  min-height: 0; /* important for firefox */
}
.offscreen {
  position: absolute;
  top: -1000px;
  left: -1000px;
}
.not-displayed {
  display: none !important;
}
.scrollable.scrollable-auto {
  overflow-y: auto;
  overflow-x: hidden;
  &.scrollable-x {
    overflow-x: auto;
  }
}
.scrollable {
  overflow-y: scroll;
  overflow-x: hidden;
}
.scrollable-x {
  overflow-y: hidden;
  overflow-x: scroll;
}

/* delayed appearance animation */
.fade-in {
  animation: 1s fadeIn;
  animation-fill-mode: forwards;
}
@keyframes fadeIn {
  99% {
    visibility: hidden;
  }
  100% {
    visibility: visible;
  }
}

/* fade-in animation */
.fade-in2 {
  animation: 750ms fadeIn2;
  animation-fill-mode: forwards;
}
@keyframes fadeIn2 {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* spin animation */
@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

/* used by bottom-stripe to flush-right buttons */
a.kui--tab-navigatable {
  /* remove the hyperlink underline */
  text-decoration: none;
}
a.kui--tab-navigatable:hover {
  color: inherit;
}

/* pulse animation for repl.partial */
input.repl-partial,
.alert-pulse {
  animation: alert-pulse 500ms 1;
  animation-direction: alternate;
}
@keyframes alert-pulse {
  0% {
    color: inherit;
  }
  50% {
    font-weight: bold;
    color: rgb(227, 26, 28);
    transform: scale(1.02);
  }
  100% {
    color: inherit;
  }
}
@keyframes selected-pulse {
  0% {
    color: inherit;
  }
  100% {
    color: var(--color-brand-03);
  }
}
@keyframes big-pulse {
  0% {
  }
  50% {
    filter: hue-rotate(-45deg);
  }
  100% {
    filter: hue-rotate(45deg);
    transform: scale(1.25);
  }
}

.pulse {
  animation: pulse 1000ms 1;
}
body {
  --animation-short-repeating-pulse: pulse 1000ms 3 alternate-reverse;
  --animation-medium-repeating-pulse: pulse 1000ms 6 alternate-reverse;
  --animation-long-repeating-pulse: pulse 1000ms 20 alternate-reverse;
  --animation-infinite-repeating-pulse: pulse 1000ms infinite alternate-reverse;
  --animation-repeating-pulse: var(--animation-infinite-repeating-pulse);
}
.repeating-pulse {
  animation: var(--animation-repeating-pulse);
}
@keyframes pulse {
  0% {
    opacity: 0.25;
  }
  100% {
    opacity: 1;
  }
}

/* restart needed warning */
body:not(.oops-total-catastrophe) #restart-needed-warning {
  display: none;
  opacity: 0;
}
#restart-needed-warning {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}
#restart-needed-warning i {
  font-size: 12vw;
  color: var(--color-base08);
}
#restart-needed-warning .restart-needed-warning-content {
  color: var(--color-base06);
  font-size: 3vw;
  padding: 5vmin;
}
body.oops-total-catastrophe #restart-needed-warning {
  opacity: 1;
}

.wrap-normal {
  /* i want this element to line wrap normally */
  white-space: normal;
}

.capitalize {
  text-transform: capitalize;
}

/* markdown */
.page-content {
  flex: 1;
}
.page-content hr {
  margin: 2em 0;
  border: 0.5px solid var(--color-content-divider);
}
.page-content img {
  max-width: 100%;
}
.page-content blockquote {
  background-color: var(--color-table-border3);
  border-left: 3px solid var(--color-table-border1);
  padding: 0.375em 0.5em;
  text-align: justify;
  margin-bottom: 0.5em;
  font-size: 0.925em;
}
.page-content img[align="right"] {
  padding-left: 20px;
}
.page-content p {
  font-size: 1em;
  font-weight: 400;
  line-height: 1.25em;
}
.page-content code {
  font-family: var(--font-monospace);
}
.page-content p > code,
.page-content li > code {
  color: var(--color-base0F);
  opacity: 0.875;
  word-break: break-all;
}
$kui--page-content-h4-padding: 0.5em;
$kui--page-content-paragraph-padding: 0.375em;
.page-content p {
  padding: $kui--page-content-paragraph-padding 0;
}
.page-content h1 {
  margin-bottom: 1rem;
  font-size: 2.375em;
  letter-spacing: 0;
  line-height: 1.25;
  padding: 0;
}
.page-content h2,
.page-h2 {
  font-size: 1.75em;
  font-weight: 300;
  margin: 1em 0;
  position: relative;
  line-height: 1.25;
}
.page-content h2::before,
.page-h2::before {
  background-color: var(--color-content-divider);
  content: "";
  display: block;
  height: 1px;
  left: 0;
  position: absolute;
  bottom: -5px;
  width: 100%;
}
.page-content > h3:first-child,
.page-content > h2:first-child,
.page-content hr + h3 {
  margin-top: 0;
  padding-top: 0;
}
.page-content h3,
.page-h3 {
  color: var(--color-text-01);
  font-size: 1.25em;
  font-weight: 600;
  letter-spacing: 0;
  padding: 1em 0 0.5em;
  line-height: 1.625em;
}
.page-content h4 {
  color: var(--color-brand-01);
  letter-spacing: 0.32px;
  padding-top: $kui--page-content-h4-padding;
  font-size: unset;
  line-height: unset;

  &:not([data-is-href]) + p {
    padding-top: calc(0.5em + #{$kui--page-content-paragraph-padding});
  }
}
.page-content h5 {
  font-size: 1.125em;
  line-height: 2em;
}
.page-content ol,
.page-content ul {
  font-size: 1em;
  margin-left: 2em;
  line-height: 1.125em;
  letter-spacing: 0.16px;
}
.page-content li {
  font-weight: 400;
  list-style-type: none;
  position: relative;
  &:not(:first-child) {
    margin-top: 0.5em;
  }
}
.page-content li:before {
  content: "\002013";
  left: -1em;
  position: absolute;
}

.icon-container,
.icon-container > i {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.icon-container .deemphasize {
  white-space: nowrap;
  font-size: 0.5em;
  margin-top: 0.5ex;
}

body[kui-theme-style] {
  font-family: var(--font-sans-serif);
  background-color: var(--color-ui-01);
  color: var(--color-text-01);
}

body[kui-theme-style] a {
  color: var(--color-brand-01);
}
/* body[kui-theme-style] a:hover:not(.plain-anchor) {
  color: var(--color-support-04);
} */

.header {
  background: var(--color-stripe-01);
  color: var(--color-ui-01);
}
.header .application-name .bx--global-header__title--current-page {
  color: var(--color-support-04);
}

.green-text,
.dragover .ok-text-on-dragover {
  color: var(--color-ok);
}
.green-text svg path {
  fill: var(--color-ok);
}

badge,
[data-tag="badge"] {
  &.clickable:hover {
    /* no underline effect for icons (i) and badges */
    text-decoration: none;
  }
  &:only-child {
    /* we only need margins around badges if there is more than one badge */
    margin: 0;
  }
  &.badge-as-image {
    background-color: transparent;
  }
  &.badge-as-image img {
    width: 5em;
    height: auto;
  }
  &.badge-as-fontawesome {
    padding: 0;
    font-size: 1.5em;
    color: var(--color-name);
  }
  &.is-title-like,
  &.is-kind-like {
    background: var(--color-base0D);
  }
  &.clickable:not(.badge-as-fontawesome):hover {
    background: hsl(203, 43%, 25%);
    text-decoration: none;
    /*var(--color-ui-01);*/
  }
}

.repl-result-prefix,
badge:not(.badge-as-fontawesome):not(.badge-as-image) {
  font-family: var(--font-sans-serif);
}

.oops.oops-as-html {
  color: unset !important;
}
.repl-block.valid-response .oops,
.repl-block.error .oops,
.clickable.oops,
.oops .oops-text-on-oops,
.red-text {
  color: var(--color-error);
}
.red-text svg path {
  fill: var(--color-error) !important;
}
.yellow-text {
  color: var(--color-support-03-darker);
}
.yellow-text svg path {
  fill: var(--color-support-03-darker);
}
.processing-text {
  color: var(--color-processing) !important;
}
.processing-text > svg path {
  fill: var(--color-processing) !important;
}
.cyan-text {
  color: var(--color-cyan) !important;
}
.cyan-text > svg path {
  fill: var(--color-cyan) !important;
}
span[data-extra-decoration="application error"] {
  color: var(--color-red);
}

/* sidecar bottom stripe */
.clickable:not(.clickable-color):hover,
.entity.actions:hover .entity-name-group:not(.header-cell) .entity-name {
  color: var(--color-brand-01);
}

.log-lines .log-line .log-line-bar.is-waitTime,
.legend-icon.is-waitTime {
  background: var(--color-ui-05);
}
body[kui-theme-style="dark"] .log-lines .log-line .log-line-bar.is-waitTime,
body[kui-theme-style="dark"] .legend-icon.is-waitTime {
  opacity: 0.5;
}
.log-lines .log-line .log-line-bar.is-initTime.is-success-true,
.legend-icon.is-initTime {
  /*background: var(--color-support-04);*/
  background: repeating-linear-gradient(
    -45deg,
    var(--color-green),
    var(--color-green) 2px,
    var(--color-ui-02) 3px,
    var(--color-ui-02) 4px
  );
  filter: grayscale(0.5) saturate(0.75);
}
.log-lines .log-line .log-line-bar.is-initTime.is-success-false {
  /*background: var(--color-support-04);*/
  background: repeating-linear-gradient(to right, var(--color-red), var(--color-red) 4px, white 4px, white 8px);
}

.log-lines .log-line .log-line-bar.is-success-true,
.legend-icon.is-runTime {
  background: var(--color-support-02);
}
.log-lines .log-line .log-line-bar.is-success-false,
.legend-icon.is-success-false {
  background: var(--color-support-01);
}
.log-lines .log-line.log-line-root .log-line-bar {
  background: #f3f3f3;
  border-color: rgba(0, 0, 0, 0.5);
}
.log-lines .log-line .log-line-bar.log-line-bar-conductor {
  background: #666;
}
.log-lines .log-line .log-message {
  border-left-color: var(--color-text-01);
}
.log-lines-message-for-activations {
  font-family: var(--font-sans-serif);
}
.log-lines .log-line.logged-to-stderr .log-date {
  /* special display for messages of error log lines */
  color: var(--color-error);
}
.log-lines .log-line .log-message pre code {
  white-space: pre-wrap;
}

#restart-needed-warning {
  background-color: var(--color-stripe-01);
  /*var(--color-ui-01);*/
}

.page [data-balloon]:after {
  font-family: var(--font-sans-serif);
}

/* directory listing coloring */
.dir-listing-is-directory {
  color: var(--color-name);
}
.dir-listing-is-executable {
  color: var(--color-support-01);
}
.dir-listing-is-link {
  color: var(--color-base0E);
}

body {
  /* define theme bindings; mapping color names to the base16 scheme */
  --color-black: var(--color-ui-01);
  --color-red: var(--color-base08);
  --color-green: var(--color-base0B);
  --color-yellow: var(--color-base0A);
  --color-cyan: var(--color-base0C);
  --color-blue: var(--color-base0D);
  --color-magenta: var(--color-base0E);
  --color-white: var(--color-base07);
  --color-light-gray: var(--color-base04);
  --color-dark-gray: var(--color-base03);
  --color-ui-01: var(--color-base00);
  --color-ui-02: var(--color-base01);
  --color-ui-03: var(--color-base03);
  --color-ui-04: var(--color-base02);
  --color-ui-05: var(--color-base04);
  --color-ui-06: var(--color-base02);

  /* e.g. xterm ANSI colors; in case themes want a light yellow for
   badges, and a darker yellow for text */
  --color-yellow-text: var(--color-yellow);

  --color-table-border1: rgba(255, 255, 255, 0.35);
  --color-table-border2: rgba(255, 255, 255, 0.5);
  --color-table-border3: var(--color-ui-04);

  --color-brand-01: var(--color-blue);
  --color-brand-02: var(--color-magenta);
  --color-brand-03: var(--color-cyan);

  --color-primary-button-background: var(--color-brand-03);
  --color-primary-button-border: none;
  --color-secondary-button-background: var(--color-base04);
  --color-secondary-button-border: none;
  --color-secondary-button-border-hover: none;
  --color-primary-button-background-hover: var(--color-primary-button);
  --color-secondary-button-background-hover: var(--color-secondary-button);

  --color-field-01: var(--color-base01);

  --color-text-against-dark-bg: var(--color-text-01);
  --color-support-01: var(--color-red);
  --color-support-02: var(--color-green);
  --color-support-03: var(--color-yellow);
  --color-support-03-darker: var(--color-yellow);
  --color-support-04: var(--color-base0C);

  /* stripes */
  --color-stripe-01: var(--color-base01);
  --color-stripe-02: var(--color-base03);

  --color-text-01: var(--color-base06);
  --color-text-02: var(--color-base04);

  --color-ok: var(--color-green);
  --color-error: var(--color-red);
  --color-warning: var(--color-base09);

  --color-scrollbar-thumb: var(--color-base04);
  --color-scrollbar-thumb-border: var(--color-base02);
  --color-scrollbar-thumb-outline: transparent;
  --color-scrollbar-track: transparent;

  --color-hover-primary-text: var(--color-cyan);
  --color-content-divider: var(--color-ui-03);

  --color-tag-beta-fill: var(--color-base05);
  --color-tag-beta-text: var(--color-base01);
  --color-tag-ibm-fill: var(--color-base0D);
  --color-tag-ibm-text: var(--color-base01);

  /* default latency color spectrum */
  --color-latency-0: #2166ac;
  --color-latency-1: #67a9cf;
  --color-latency-2: hsla(201, 51%, 78%, 1); /* #d1e5f0 with lightness reduced from 88% to 78% */
  --color-latency-3: #fddbc7;
  --color-latency-4: #ef8a62;
  --color-latency-5: #b2182b;

  /* two-color charts; yellow versus cyan should be a pretty good default */
  --color-chart-0: var(--color-yellow);
  --color-chart-1: var(--color-cyan);

  /* map keys and values */
  --color-map-key: var(--color-base0C);
  --color-map-value: var(--color-text-01);

  /* entity names and kinds */
  --color-name: var(--color-base0C);

  /* "is processing" color */
  --color-processing: var(--color-ui-05);

  /* border-bottom for active tab */
  --active-tab-color: var(--color-brand-03);

  /* repl background */
  --color-repl-background: var(--color-ui-01);

  /* background of third view */
  --color-background-03: var(--color-ui-03);

  /* text selection */
  --color-selection-background-dark: rgba(255, 255, 255, 0.3);
  --color-selection-background-light: rgba(0, 0, 0, 0.3);
}
body[kui-theme-style="dark"],
body[kui-theme-style="light"] .kui--inverted-color-context {
  --color-selection-background: var(--color-selection-background-dark);
}
body[kui-theme-style="light"],
body[kui-theme-style="dark"] .kui--inverted-color-context {
  --color-selection-background: var(--color-selection-background-light);
}

.color-base08 {
  color: var(--color-base08);
  fill: currentColor;
}
.color-base09 {
  color: var(--color-base09);
  fill: currentColor;
}
.color-base0A {
  color: var(--color-base0A);
  fill: currentColor;
}
.color-base0B {
  color: var(--color-base0B);
  fill: currentColor;
}
.color-base0C {
  color: var(--color-base0C);
  fill: currentColor;
}
.color-base0D {
  color: var(--color-base0D);
  fill: currentColor;
}
.color-base0E {
  color: var(--color-base0E);
  fill: currentColor;
}
.color-base0F {
  color: var(--color-base0F);
  fill: currentColor;
}

@media all and (max-width: 1100px) {
  .log-lines .log-field.start-time-field {
    display: none;
  }
}

@import "grid";
